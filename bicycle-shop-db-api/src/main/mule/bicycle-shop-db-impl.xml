<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="get-bicycles-implSub_Flow" doc:id="f9ec5093-6eb1-451a-9244-efb45bd6fbfb" >
		<ee:transform doc:name="Prepare query" doc:id="75b5d9b0-0da3-4465-bf93-e525666d2a6d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
import * from dw::core::Objects
fun addConditions(queryParams)=(nameSet(queryParams default {}) map(object)->{
	    query: if(object=="brand")"BRAND='" ++ queryParams."brand" ++ "'"
	       else if(object=="type")"TYPE='" ++ queryParams."type" ++ "'"
	       else if(object=="frameSize")"FRAME_SIZE='" ++ queryParams."frameSize" ++ "'"
	       else if(object=="brakes")"BRAKE_TYPE='" ++ queryParams."brakes" ++ "'"
	       else ""
    }).*query filter($!="") // joinBy " AND "
fun addPriceRange(queryParams)="PRICE BETWEEN " ++ (queryParams."minPrice" default 0) ++ " AND "
        ++ (queryParams."maxPrice" default "(SELECT MAX(PRICE) FROM BICYCLES)")       
fun addSortOrder(queryParams)=if((queryParams."sortBy" default "Popularity") == "Popularity")
        "ORDER BY ITEMS_SOLD DESC"
    else if((queryParams."sortBy" default "Popularity") == "Price (cheaper to expensive)")
        "ORDER BY PRICE"
    else "ORDER BY PRICE DESC"
fun addWhereClause(conditions, priceRange)=" WHERE " ++ ((conditions default [] ++ [priceRange]) joinBy " AND ")
---
//addWhereClause(addConditions(null),addPriceRange(null))
"SELECT * FROM (SELECT ID,(SELECT NAME FROM BRANDS WHERE ID=BRAND_ID) AS BRAND,"
++ "TYPE, FRAME_SIZE, WHEEL_SIZE,"
++ "HANDLEBAR_WIDTH, SUSPENSION,"
++ "COLOR, WEIGHT, PRICE, ITEMS_AVAILABLE,"
++ "(SELECT NAME FROM BRANDS WHERE ID=(SELECT BRAND_ID FROM BRAKES WHERE ID=BRAKES_ID)) AS BRAKE_PRODUCER,"
++ "(SELECT TYPE FROM BRAKES WHERE ID=BRAKES_ID) AS BRAKE_TYPE,"
++ "(SELECT NAME FROM BRANDS WHERE ID=(SELECT BRAND_ID FROM TRANSMISSION_COMPONENTS WHERE ID=FRONT_DERAILLEUR)) AS FD_PRODUCER,"
++ "(SELECT GROUPSET FROM TRANSMISSION_COMPONENTS WHERE ID=FRONT_DERAILLEUR) AS FD_GROUPSET,"
++ "(SELECT SPEEDS FROM TRANSMISSION_COMPONENTS WHERE ID=FRONT_DERAILLEUR) AS FD_SPEEDS,"
++ "(SELECT NAME FROM BRANDS WHERE ID=(SELECT BRAND_ID FROM TRANSMISSION_COMPONENTS WHERE ID=REAR_DERAILLEUR)) AS RD_PRODUCER,"
++ "(SELECT GROUPSET FROM TRANSMISSION_COMPONENTS WHERE ID=REAR_DERAILLEUR) AS RD_GROUPSET,"
++ "(SELECT SPEEDS FROM TRANSMISSION_COMPONENTS WHERE ID=REAR_DERAILLEUR) AS RD_SPEEDS,"
++ "(SELECT NAME FROM BRANDS WHERE ID=(SELECT BRAND_ID FROM TRANSMISSION_COMPONENTS WHERE ID=CASSETTE)) AS CASSETTE_PRODUCER,"
++ "(SELECT GROUPSET FROM TRANSMISSION_COMPONENTS WHERE ID=CASSETTE) AS CASSETTE_GROUPSET,"
++ "(SELECT SPEEDS FROM TRANSMISSION_COMPONENTS WHERE ID=CASSETTE) AS CASSETTE_SPEEDS,"
++ "(SELECT NAME FROM BRANDS WHERE ID=(SELECT BRAND_ID FROM TRANSMISSION_COMPONENTS WHERE ID=CRANKSET)) AS CRANKSET_PRODUCER,"
++ "(SELECT GROUPSET FROM TRANSMISSION_COMPONENTS WHERE ID=CRANKSET) AS CRANKSET_GROUPSET,"
++ "(SELECT SPEEDS FROM TRANSMISSION_COMPONENTS WHERE ID=CRANKSET) AS CRANKSET_SPEEDS,"
++ "ITEMS_SOLD"
++ " FROM BICYCLES) AS B" ++ 
addWhereClause(addConditions(attributes.queryParams),
    addPriceRange(attributes.queryParams)) ++ " "
++ addSortOrder(attributes.queryParams)
++ " LIMIT " ++  (attributes.queryParams.page default 1)*20
++ " OFFSET " ++ ((attributes.queryParams.page default 1)-1)*20]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:select doc:name="Select" doc:id="b98de8ab-4ae8-474f-99ca-899ec4671119" config-ref="Database_Config">
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="7e0ce90a-57b3-4f1f-9aa1-fdd04af8839f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map(bicycle)->{	
    id: bicycle."ID",
    "type": bicycle."TYPE",
    brand: bicycle."BRAND",
    frameSize: bicycle."FRAME_SIZE",
    handlebarWidth: bicycle."HANDLEBAR_WIDTH",
    wheelSize: bicycle."WHEEL_SIZE",
    suspension: bicycle."SUSPENSION",
    frotnDerailleur: {
    	manufacturer: bicycle."FD_PRODUCER",
    	groupset: bicycle."FD_GROUPSET"
    },
    rearDerailleur: {
    	manufacturer: bicycle."RD_PRODUCER",
    	groupset: bicycle."RD_GROUPSET"
    },
    cassette: {
    	manufacturer: bicycle."CASSETTE_PRODUCER",
    	groupset: bicycle."CASSETTE_GROUPSET"
    },
    crankset: {
    	manufacturer: bicycle."CRANKSET_PRODUCER",
    	groupset: bicycle."CRANKSET_GROUPSET"
    },
    brakes: {
    	manufacturer: bicycle."BRAKE_PRODUCER",
    	"type": bicycle."BRAKE_TYPE"
    },
    color: bicycle."COLOR",
    weight: bicycle."WEIGHT",
    price: bicycle."PRICE",
    availability: (bicycle."ITEMS_SOLD">0)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="create-order-Sub_Flow" doc:id="3f562b6b-ea86-4671-9d20-948aa92b042d" >
		<set-variable value="#[payload.bicycleId]" doc:name="Set Variable" doc:id="16c0f838-1a86-48bf-83df-77392798a4b3" variableName="bicycleId"/>
		<ee:transform doc:name="Prepare insert query" doc:id="9c8e2a79-a6aa-4e27-809f-3c86dc64c9af" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
"INSERT INTO ORDERS( FIRST_NAME, LAST_NAME, EMAIL, PHONE,"
	++"BICYCLE_ID, ADDRESS) VALUES('" ++ payload.firstName ++ "','"
	++ payload.lastName ++ "','"
	++ payload.email ++ "','"
	++ payload.phone ++ "','"
	++ payload.bicycleId ++ "','"
	++ payload.address ++ "')"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1464d800-5abf-4f32-83ac-ef10b23ced5a" message="#[payload]"/>
		<db:insert doc:name="Insert" doc:id="8d81f3f0-3ef3-4e47-8755-823b597f0bc5" config-ref="Database_Config">
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:insert>
		<flow-ref doc:name="Update bicycles" doc:id="1026fbfb-e77a-427e-9056-bdac27e0a597" name="update-bicycles-Sub_Flow"/>
		<ee:transform doc:name="Transform Message" doc:id="facf3937-3646-45f4-8da0-aaf3b24f5f6e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Order succesfully created"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="get-orders-lSub_Flow" doc:id="dcc2f84e-835a-4406-972d-2cbcd5df11d7" >
		<db:select doc:name="Select" doc:id="12ba547b-d0fe-41d9-92eb-040bbb57ab36" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM ORDERS]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="80b11c9c-d3d6-4ce1-8d82-ddcee7b2629f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map(order)->{
	id: order."ID",
	firstName: order."FIRST_NAME",
	lastName: order."LAST_NAME",
	email: order."EMAIL",
	phone: order."PHONE",
	address: order."ADDRESS",
	delivered: order."DELIVERED"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="update-bicycles-Sub_Flow" doc:id="c759734c-13ec-4c30-9c85-9dbda619fcce" >
		<db:select doc:name="Select itemsSold, itemsAvailable" doc:id="a1d9cb96-4872-4294-b2a9-738664cac678" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT ITEMS_AVAILABLE ,ITEMS_SOLD FROM BICYCLES WHERE ID=:bicycleId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bicycleId: vars.bicycleId
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Prepare update statement" doc:id="c39e6559-c0c2-4686-857f-e3701625542f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"UPDATE BICYCLES SET ITEMS_SOLD=" 
  ++ (payload[0]."ITEMS_SOLD" as Number + 1)
  ++ ",ITEMS_AVAILABLE=" ++ (payload[0]."ITEMS_AVAILABLE" as Number-1)
  ++ " WHERE ID=" ++ vars.bicycleId]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:update doc:name="Update" doc:id="1180ed77-7b79-4b35-8beb-c7f5b43515ad" config-ref="Database_Config">
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:update>
	</sub-flow>
</mule>

