<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<sub-flow name="starter-Sub_Flow" doc:id="3f087bac-eda5-4437-a8ee-92ae0a6f6de7" >
		<db:execute-script doc:name="Execute script" doc:id="51450216-d412-4a48-8b18-98408680dfe7" config-ref="Database_Config" file='#["C:\\Users\ddanylo\\AnypointStudio\\studio-workspace\\bicycle-shop-db-api\\src\\main\\resources\\sql\\sql_starting_script.sql"]'/>
		<logger level="INFO" doc:name="Starting script executed" doc:id="8f8aba32-4a8b-4429-a00c-f1477f355ffb" message='#["Starting script executed"]'/>
		<file:read doc:name="Read" doc:id="fc7bb9d6-f31f-4bf6-96f7-0d95c6e017ce" path="C:\Users\ddanylo\Documents\Mulesoft\DB_project\bicycles.json" />
		<set-variable value="#[output application/json&#10;---&#10;payload]" doc:name="Set Variable" doc:id="a6c9b80f-4838-4f0f-ac27-2c23b8c25411" variableName="bicycles"/>
		<flow-ref doc:name="Insert brands" doc:id="e93e663f-d42a-422c-b420-a0ee78920b84" name="insert-brands-implSub_Flow"/>
		<flow-ref doc:name="Insert transmission components" doc:id="78e9447e-4208-4a5d-8c0d-d1f3049657ad" name="insert-transmission-components-implSub_Flow"/>
		<flow-ref doc:name="Insert brakes" doc:id="b440ee9f-563a-47ea-b9f4-6a94f99321ba" name="insert-brakes-implSub_Flow"/>
		<flow-ref doc:name="Insert bicycles" doc:id="3a815773-84dc-4290-a4ec-604d7d02753f" name="insert-bicycles-implSub_Flow"/>
	</sub-flow>
	<sub-flow name="insert-brands-implSub_Flow" doc:id="b17eff1f-f964-4c8d-a0ab-c127c14d4b55" >
		<ee:transform doc:name="Retrieve brands" doc:id="fa5b2756-8b0a-4f55-959e-8e6fb30acba3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(((vars.bicycles distinctBy ($.brand) map(bicycle)->{
	brand: bicycle.brand
}) ++ (vars.bicycles distinctBy ($.frontDerailleur.brand) map(bicycle)->{
	brand: bicycle.frontDerailleur.brand
}) ++ (vars.bicycles distinctBy ($.rearDerailleur.brand) map(bicycle)->{
	brand: bicycle.rearDerailleur.brand
}) ++ (vars.bicycles distinctBy ($.cassette.brand) map(bicycle)->{
	brand: bicycle.cassette.brand
}) ++ (vars.bicycles distinctBy ($.crankset.brand) map(bicycle)->{
	brand: bicycle.crankset.brand
}) ++ (vars.bicycles distinctBy ($.brakes.brand) map(bicycle)->{
	brand: bicycle.brakes.brand
})) distinctBy($.brand)).*brand]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Prepare query" doc:id="16f06dd3-2730-4ea0-b09b-7666f7a1c015" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
"INSERT INTO BRANDS(NAME) VALUES" ++ 
((payload map(brand)->{
	value: "('" ++ brand ++ "')"
}).*value joinBy ",")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ee0ce224-82e3-4af0-9fd2-958d1cfdffa0" message="#[payload]"/>
		<db:insert doc:name="Insert brands" doc:id="85bd9a77-661b-4460-b1de-a66b5b8f7d60" config-ref="Database_Config">
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:insert>
	</sub-flow>
	<sub-flow name="insert-transmission-components-implSub_Flow" doc:id="858e0b1a-5221-4816-ac04-83687b8165ef" >
		<ee:transform doc:name="Retrieve transmission components" doc:id="f510a23f-d3ae-4889-b31f-1262318f453f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from modules::TransmissionFunctions
---
(vars.bicycles.*frontDerailleur ++ vars.bicycles.*rearDerailleur
  ++ vars.bicycles.*cassette ++ vars.bicycles.*crankset
  distinctBy($."type" ++ $.line ++ $.brand ++ $.speeds)) map(component)->{
  	componentType: typeTransform(component."type"),
  	brand: component.brand,
  	line: component.line,
  	speeds: component.speeds
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Prepare query" doc:id="c4c029fc-fea4-41db-a551-f841a9ff8b79" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
import * from modules::TransmissionFunctions
---
"INSERT INTO TRANSMISSION_COMPONENTS(BRAND_ID, GROUPSET, TYPE,"
++ "UNIQUE_CODE, SPEEDS) VALUES" ++
((payload map(component)->{
	value: "((SELECT ID FROM BRANDS WHERE NAME='" 
	    ++ component.brand ++ "'),'" ++ component.line
	    ++ "','" ++ component.componentType
	    ++ "','" ++ createUniqueCode(component)
	    ++ "','" ++ component.speeds ++ "')"
}).*value joinBy ",")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert transmission components" doc:id="db3e56c0-865c-4f20-b336-13313474f842" config-ref="Database_Config">
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:insert>
	</sub-flow>
	<sub-flow name="insert-brakes-implSub_Flow" doc:id="fbc80954-a15f-4fb5-9c4a-f9aac36260d2" >
		<ee:transform doc:name="Retrieve brakes" doc:id="0536ed45-07cf-4a2f-a3bb-dc068c5d784f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.bicycles.*brakes distinctBy($.brand ++ $."type")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Prepare query" doc:id="8d6be69c-3cc7-43e2-a74e-c6181380dc4e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
"INSERT INTO BRAKES(BRAND_ID, TYPE) VALUES" ++
((payload map(brake)->{
	value: "((SELECT ID FROM BRANDS WHERE NAME='" 
	    ++ brake.brand ++ "'),'" ++ brake."type"
	    ++ "')"
}).*value joinBy ",")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert brakes" doc:id="66924ddd-44dc-450b-90c6-7b4291449a72" config-ref="Database_Config" >
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:insert>
	</sub-flow>
	<sub-flow name="insert-bicycles-implSub_Flow" doc:id="10c8f1cc-3f3f-48b4-896b-64bbf830d921" >
		<ee:transform doc:name="Prepare query" doc:id="39f7c8d8-8197-4b14-bb4c-d21c37fb47d4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
//output application/json
import * from modules::TransmissionFunctions
import * from dw::core::Objects
fun getSelectQuery(component)=if((nameSet(component) contains "speeds"))
    "(SELECT ID FROM TRANSMISSION_COMPONENTS WHERE UNIQUE_CODE='"
    ++ createUniqueCode((component ++ {componentType: typeTransform(component."type")}))
    ++ "')"
  else
    "(SELECT ID FROM "++
    "(SELECT BRAKES.ID, BRAKES.TYPE, BRANDS.NAME AS BRAND_NAME FROM BRAKES" ++
    	" JOIN BRANDS ON BRAKES.BRAND_ID=BRANDS.ID" ++
    ") AS B WHERE B.BRAND_NAME='" ++ component.brand ++
    "' AND B.TYPE='" ++ component."type" ++ "')"
---
//getSelectQuery(vars.bicycles[0].frontDerailleur)
"INSERT INTO BICYCLES(BRAND_ID, TYPE, FRAME_SIZE, WHEEL_SIZE," 
  ++ "HANDLEBAR_WIDTH, FRONT_DERAILLEUR, REAR_DERAILLEUR,"
  ++ " CASSETTE, CRANKSET, BRAKES_ID, SUSPENSION,"
  ++ " COLOR, WEIGHT, PRICE, ITEMS_AVAILABLE, ITEMS_SOLD"
  ++ ") VALUES" ++ ((vars.bicycles map(bicycle)->{
	value: "((SELECT ID FROM BRANDS WHERE NAME='" 
	  ++ bicycle.brand ++ "'),'" ++ bicycle."type" ++ "','" 
	  ++ bicycle.frameSize ++ "'," ++ bicycle.wheelSize ++ ","
	  ++ bicycle.handlebarWidth ++ ","
	  ++ getSelectQuery(bicycle.frontDerailleur) ++ ","
	  ++ getSelectQuery(bicycle.rearDerailleur) ++ ","
	  ++ getSelectQuery(bicycle.cassette) ++ ","
	  ++ getSelectQuery(bicycle.crankset) ++ ","
	  ++ getSelectQuery(bicycle.brakes) ++ ",'"
	  ++ bicycle.suspension ++ "','"
	  ++ bicycle.color ++ "',"
	  ++ bicycle.weight ++ ","
	  ++ bicycle.price ++ ","
	  ++ bicycle.itemsAvailabilie ++ ","
	  ++ bicycle.itemsSold ++ ")"
    }).*value joinBy ",")// as String]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert bicycles" doc:id="243c1404-fd7a-4727-b060-481ca0301de4" config-ref="Database_Config" >
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:insert>
	</sub-flow>
</mule>
